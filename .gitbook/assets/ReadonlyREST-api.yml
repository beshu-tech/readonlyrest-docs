openapi: 3.0.3
info:
  title: ReadonlyREST API
  description: The API is designed for ReadonlyREST Kibana plugin users.
  version: 1.1.0

paths:
  /api/ror/settings:
    post:
      summary: Configuring in-index Main Settings
      description: The endpoint can be used to configure the main security settings. The new settings are validated before saving.
      tags:
        - ReadonlyREST Enterprise license endpoints
        - Main Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      requestBody:
        required: true
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/UpdateMainSettingsRequest'
      responses:
        200:
          description: Returns a status of updating Main Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMainSettingsResponse'
              examples:
                UpdateMainSettingsSuccessResponse:
                  $ref: "#/components/examples/UpdateMainSettingsSuccessResponse"
                UpdateMainSettingsFailedResponse:
                  $ref: "#/components/examples/UpdateMainSettingsFailedResponse"
        403:
          description: The request was forbidden by ReadonlyREST's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
                UpdateSettingsViaApiEnterpriseOnly:
                  $ref: "#/components/examples/UpdateSettingsViaApiEnterpriseOnly"
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeResponse'
              examples:
                UnsupportedMediaTypeResponseExample:
                  $ref: "#/components/examples/UnsupportedMediaTypeResponseExample"

  /api/ror/settings/upload:
    post:
      summary: Configuring in-index Main Settings via config file upload.
      description: The endpoint can be used to configure the main security settings via file upload. The new settings are validated before saving.
      tags:
        - ReadonlyREST Enterprise license endpoints
        - Main Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadMainSettingsRequest'
      responses:
        200:
          description: Returns a status of updating Main Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMainSettingsResponse'
              examples:
                UpdateMainSettingsSuccessResponse:
                  $ref: "#/components/examples/UpdateMainSettingsSuccessResponse"
                UpdateMainSettingsFailedResponse:
                  $ref: "#/components/examples/UpdateMainSettingsFailedResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestResponse'
              examples:
                YamlFileExtensionRequiredResponseExample:
                  $ref: "#/components/examples/YamlFileExtensionRequiredResponseExample"
        403:
          description: The request was forbidden by ReadonlyREST's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
                UpdateSettingsViaApiEnterpriseOnly:
                  $ref: "#/components/examples/UpdateSettingsViaApiEnterpriseOnly"
        413:
          description: Request Entity Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSizeExceedsResponse'
              examples:
                FileSizeExceeds:
                  $ref: "#/components/examples/FileSizeExceedsResponseExample"
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeResponse'
              examples:
                UnsupportedMediaType:
                  $ref: "#/components/examples/UnsupportedMediaTypeResponseExample"

  /api/ror/license:
    post:
      summary: Upgrading the license to PRO or Enterprise edition
      description: The endpoint can be use to Upgrading the license to PRO or Enterprise edition.
      tags:
        - License
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
        - in: query
          name: overwrite
          description: You can set value as true to overwrite existing license key
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateLicenseKey'
      responses:
        200:
          description: Returns a status of updating License key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateLicenseKey'
              examples:
                UpdateLicenseKeySuccessResponse:
                  $ref: "#/components/examples/UpdateLicenseKeySuccessResponse"
                UpdateLicenseKeyNotModifiedResponse:
                  $ref: "#/components/examples/UpdateLicenseKeyUnmodifiedResponse"

components:
  securitySchemes:
    http:
      type: http
      scheme: basic
    https:
      type: http
      scheme: basic

  schemas:
    badRequestResponse:
      type: object
      required:
        - message
        - status
      properties:
        status:
          type: number
          example: 400
        message:
          type: string
          example: 'The file extension is not supported. Please upload a file with the correct yml or yaml extension.'

    UnsupportedMediaTypeResponse:
      type: object
      required:
        - message
        - status
      properties:
        status:
          type: number
          example: 415
        message:
          type: string
          example: 'We are unable to process your request because the provided media type is not supported. Please ensure you are using a compatible content type.'

    FileSizeExceedsResponse:
      type: object
      required:
        - message
        - status
      properties:
        status:
          type: number
          example: 413
        message:
          type: string
          example: 'The file size exceeds the maximum 10MB allowed limit. Please upload a smaller file.'

    ForbiddenRorResponse:
      type: object
      required:
        - message
        - status
      properties:
        status:
          type: number
          example: 403
        message:
          type: string
          example: 'No ACL block was matched'

    XRorCorrelationId:
      type: string
      description: "Correlation ID to correlate requests/responses logs within one ROR KBN session"
      example: "CED054A0-9881-401E-AEED-4FB4C5915DD6"

    UpdateMainSettingsRequest:
      type: string
      description: "ReadonlyREST main settings YAML"
      example: |
        readonlyrest:    
          access_control_rules:
          - name: "Require HTTP Basic | Auth"     
            type: allow 
            indices: ["test"]    
          - name: "other"      
            auth_key: "admin:test"

    UploadMainSettingsRequest:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: "ReadonlyREST main settings file upload"
          example: "LINK TO THE CONFIG FILE, FOR EXAMPLE: config/readonlyrest.yml"

    UpdateMainSettingsResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Update Main Settings status
          enum:
            - SUCCESS
            - FAILURE
        message:
          type: string
          description: Human readable message

    updateLicenseKey:
      type: object
      description: License key to update
      required:
        - license
      properties:
        license:
          type: string
          description: JWT token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c


  parameters:
    XRorCorrelationIdHeader:
      name: X-ROR-Correlation-ID
      in: header
      required: false
      description: ID to correlate requests/reponses logs within one ReadonlyREST KBN session
      schema:
        $ref: '#/components/schemas/XRorCorrelationId'

  examples:
    NoAclBlockWasMatchedForbiddenResponseExample:
      summary: No ACL block was matched
      value:
        status: FORBIDDEN
        message: 'No ACL block was matched'

    ForbidBlockMatchedResponseExample:
      summary: Request was FORBIDDEN by matching a block with "forbid" type
      value:
        status: FORBIDDEN
        message: 'Request was FORBIDDEN by matching a block with "forbid" type'

    RorIsNotStartedYetResponseExample:
      summary: ReadonlyREST was not started yet
      value:
        status: FORBIDDEN
        message: "ReadonlyREST was not started yet"

    RorFailedToStartResponseExample:
      summary: ReadonlyREST failed to start
      value:
        status: FORBIDDEN
        message: "ReadonlyREST failed to start"

    UpdateSettingsViaApiEnterpriseOnly:
      summary: You need a ReadonlyREST Enterprise license to save cluster-wide settings via ReadonlyREST API
      value:
        status: FORBIDDEN
        message: "You need a ReadonlyREST Enterprise license to save cluster-wide settings via ReadonlyREST API"

    UpdateMainSettingsSuccessResponse:
      summary: Main settings updated with success
      value:
        status: SUCCESS
        message: "ok"

    UpdateMainSettingsFailedResponse:
      summary: Main settings update failed
      value:
        status: FAILURE
        message: "Cannot reload new settings"

    UnsupportedMediaTypeResponseExample:
      summary: Unsupported Media Type
      value:
        status: UNSUPPORTED_MEDIA_TYPE
        message: "We are unable to process your request because the provided media type is not supported. Please ensure you are using a compatible content type."

    YamlFileExtensionRequiredResponseExample:
      summary: Not supported file extension
      value:
        status: WRONG_FILE_EXTENSION
        message: "The file extension is not supported. Please upload a file with the correct yml or yaml extension."

    FileSizeExceedsResponseExample:
      summary: File size exceeds
      value:
        status: FILE_SIZE_EXCEEDS
        message: "The file size exceeds the maximum 10MB allowed limit. Please upload a smaller file."

    UpdateLicenseKeySuccessResponse:
      summary: License key updated with success
      value:
        status: SUCCESS
        message: "ok"
    UpdateLicenseKeyUnmodifiedResponse:
      summary: License key not modified
      value:
        status: UNMODIFIED
        message: "License token already exists is not modified. If you want to overwrite your license key use overwrite=true query string parameter."
security:
  - http: []
  - https: []
